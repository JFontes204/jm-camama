[{"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\index.js":"1","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\App.js":"2","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\routes.js":"3","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Login\\index.js":"4","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Logout\\index.js":"5","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\User\\create.js":"6","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\User\\update.js":"7","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Comite\\create.js":"8","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Nucleo\\create.js":"9","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Nucleo\\update.js":"10","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Comite\\update.js":"11","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Militante\\create.js":"12","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Militante\\update.js":"13","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Agenda\\create.js":"14","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Agenda\\update.js":"15","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\User\\index.js":"16","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Comite\\index.js":"17","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Nucleo\\index.js":"18","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Militante\\index.js":"19","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Agenda\\index.js":"20","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\NavBarComponent\\index.js":"21","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\PrivateRoute\\index.js":"22","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Charts\\index.js":"23","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Home\\index.js":"24","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Settings\\index.js":"25","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\services\\Api.js":"26","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\services\\auth.js":"27","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Settings\\listItems.js":"28","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Loading\\index.js":"29","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\utils\\dataFormate.js":"30","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\User\\viewer.js":"31","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Comite\\viewer.js":"32","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Nucleo\\viewer.js":"33","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Militante\\viewer.js":"34","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Agenda\\viewer.js":"35"},{"size":290,"mtime":1612209683160,"results":"36","hashOfConfig":"37"},{"size":555,"mtime":1614800948535,"results":"38","hashOfConfig":"37"},{"size":4026,"mtime":1616518233674,"results":"39","hashOfConfig":"37"},{"size":3591,"mtime":1616960256642,"results":"40","hashOfConfig":"37"},{"size":509,"mtime":1615484296826,"results":"41","hashOfConfig":"37"},{"size":4895,"mtime":1615916344893,"results":"42","hashOfConfig":"37"},{"size":7263,"mtime":1615571633944,"results":"43","hashOfConfig":"37"},{"size":6805,"mtime":1615496015415,"results":"44","hashOfConfig":"37"},{"size":3725,"mtime":1615560082135,"results":"45","hashOfConfig":"37"},{"size":6512,"mtime":1616667284979,"results":"46","hashOfConfig":"37"},{"size":8756,"mtime":1615497764178,"results":"47","hashOfConfig":"37"},{"size":7829,"mtime":1616146185864,"results":"48","hashOfConfig":"37"},{"size":17954,"mtime":1616146981089,"results":"49","hashOfConfig":"37"},{"size":6671,"mtime":1615559449497,"results":"50","hashOfConfig":"37"},{"size":8148,"mtime":1615559467947,"results":"51","hashOfConfig":"37"},{"size":3488,"mtime":1616965382871,"results":"52","hashOfConfig":"37"},{"size":3449,"mtime":1617004784373,"results":"53","hashOfConfig":"37"},{"size":3811,"mtime":1616962579986,"results":"54","hashOfConfig":"37"},{"size":4238,"mtime":1616962401293,"results":"55","hashOfConfig":"37"},{"size":3689,"mtime":1616962708169,"results":"56","hashOfConfig":"37"},{"size":3009,"mtime":1616962449834,"results":"57","hashOfConfig":"37"},{"size":677,"mtime":1616959641240,"results":"58","hashOfConfig":"37"},{"size":5199,"mtime":1616965499053,"results":"59","hashOfConfig":"37"},{"size":2388,"mtime":1616949630431,"results":"60","hashOfConfig":"37"},{"size":27162,"mtime":1616760836970,"results":"61","hashOfConfig":"37"},{"size":174,"mtime":1615912007159,"results":"62","hashOfConfig":"37"},{"size":2888,"mtime":1616964692967,"results":"63","hashOfConfig":"37"},{"size":1322,"mtime":1616076350131,"results":"64","hashOfConfig":"37"},{"size":638,"mtime":1615484296826,"results":"65","hashOfConfig":"37"},{"size":224,"mtime":1614774984539,"results":"66","hashOfConfig":"37"},{"size":179,"mtime":1616516169209,"results":"67","hashOfConfig":"37"},{"size":179,"mtime":1616516169209,"results":"68","hashOfConfig":"37"},{"size":179,"mtime":1616516169209,"results":"69","hashOfConfig":"37"},{"size":179,"mtime":1616516169209,"results":"70","hashOfConfig":"37"},{"size":179,"mtime":1616516169209,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1cpcd03",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\index.js",[],["151","152"],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\App.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\routes.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Login\\index.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Logout\\index.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\User\\create.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\User\\update.js",["153"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { Modal, Toast } from 'react-bootstrap';\r\nimport api from '../../services/Api';\r\n\r\nfunction UserUpdate() {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [toastShow, setToastShow] = useState(false);\r\n  const [toastMsg, setToastMsg] = useState('');\r\n  const [toastClasses, setToastClasses] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [membro_id, setMembro_id] = useState('');\r\n  const [militantes, setMilitantes] = useState([]);\r\n  const [estado, setEstado] = useState('');\r\n  const { user_id } = useParams();\r\n\r\n  useEffect(() => {\r\n    getUserById(user_id);\r\n    getMilitantes();\r\n  }, []);\r\n\r\n  async function getMilitantes() {\r\n    try {\r\n      const response = await api.get('/militantes', {\r\n        headers: {\r\n          Authorization: `Bearer ${\r\n            JSON.parse(localStorage.getItem('token')).access_token\r\n          }`,\r\n        },\r\n      });\r\n\r\n      militantes\r\n        ? setMilitantes(response.data)\r\n        : setMilitantes([...militantes, response.data]);\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function getUserById(user_id) {\r\n    try {\r\n      const response = await api.get(`/users/${user_id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${\r\n            JSON.parse(localStorage.getItem('token')).access_token\r\n          }`,\r\n        },\r\n      });\r\n      const [res] = response.data;\r\n      setUsername(res.username);\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function updateUser() {\r\n    setModalShow(false);\r\n    try {\r\n      const response = await api.put(\r\n        `/users/${user_id}`,\r\n        {\r\n          username,\r\n          password,\r\n          membro_id,\r\n          estado,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${\r\n              JSON.parse(localStorage.getItem('token')).access_token\r\n            }`,\r\n          },\r\n        }\r\n      );\r\n      if (Object.keys(response.data).length > 0) {\r\n        setUsername('');\r\n        setPassword('');\r\n        setMembro_id('');\r\n        setEstado('');\r\n        setToastMsg('Alterado com sucesso!');\r\n        setToastClasses('text-dark');\r\n        setToastShow(true);\r\n        setTimeout(() => (window.location.href = '/user'), 2000);\r\n      } else {\r\n        setToastMsg('Falha ao fazer as alterações!');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n      } else {\r\n        setToastMsg('Falha ao fazer as alterações!');\r\n      }\r\n      setToastClasses('bg-warning text-white');\r\n      setToastShow(true);\r\n    }\r\n  }\r\n\r\n  function handleClose() {\r\n    setModalShow(false);\r\n    setToastMsg('Alterações canceladas!');\r\n    setToastClasses('bg-warning text-white');\r\n    setToastShow(true);\r\n  }\r\n  return (\r\n    <>\r\n      <Toast\r\n        onClose={() => setToastShow(false)}\r\n        show={toastShow}\r\n        delay={2500}\r\n        autohide\r\n      >\r\n        <Toast.Body className={`${toastClasses}`}>\r\n          <strong>{toastMsg}</strong>\r\n        </Toast.Body>\r\n      </Toast>\r\n      <form>\r\n        <div className=\"row content-header\">\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-12\">\r\n            <Link className=\"text-link text-link-view\" to={'/user'}>\r\n              <button className=\"btn btn-second mb-1\">Voltar</button>\r\n            </Link>\r\n          </div>\r\n          <h3 className=\"col-lg-9 col-md-9 col-sm-8 col-xs-12\">\r\n            Actualização de dados do utilizador\r\n          </h3>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Militante</label>\r\n              <select\r\n                className=\"custom-select\"\r\n                onChange={(e) => setMembro_id(e.target.value)}\r\n              >\r\n                <option value=\"-1\">Escolhe um militante</option>\r\n                {militantes.map((value, key) => {\r\n                  return (\r\n                    <option key={key} value={value.id}>\r\n                      {value.nome}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Nome de utilizador</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nome de utilizador\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Palavra-passe</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Palavra-passe\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Estado do utilizador</label>\r\n              <select\r\n                onChange={(e) => setEstado(e.target.value)}\r\n                className=\"custom-select\"\r\n              >\r\n                <option value=\"0\">Escolhe um estado</option>\r\n                <option value=\"Activo\">Activo</option>\r\n                <option value=\"Bloqueado\">Bloqueado</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-master btn-lg btn-block\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setModalShow(true);\r\n          }}\r\n        >\r\n          Actualizar\r\n        </button>\r\n      </form>\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"text-dark\">Alerta - SIIM</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-dark\">\r\n          Tem certeza que deseja realizar as alterações?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-second\" onClick={handleClose}>\r\n            Cancelar\r\n          </button>\r\n          <button className=\"btn btn-master\" onClick={updateUser}>\r\n            Confirmar\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserUpdate;\r\n","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Comite\\create.js",["154"],"import React, { useState, useEffect } from 'react';\r\nimport { Toast } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport api from '../../services/Api';\r\n\r\nfunction ComiteCreate() {\r\n  const [toastShow, setToastShow] = useState(false);\r\n  const [toastMsg, setToastMsg] = useState('');\r\n  const [toastClasses, setToastClasses] = useState('');\r\n  const [nome, setNome] = useState('');\r\n  const [comite_numero, setComite_numero] = useState('');\r\n  const [comite_pai_id, setComite_pai_id] = useState(null);\r\n  const [localizacao, setLocalizacao] = useState('');\r\n  const [descricao, setDescricao] = useState('');\r\n  const [estado, setEstado] = useState('');\r\n  const [comites, setComites] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getComites();\r\n  }, []);\r\n\r\n  async function getComites() {\r\n    try {\r\n      const response = await api.get('/comites/all/any', {\r\n        headers: {\r\n          Authorization: `Bearer ${\r\n            JSON.parse(localStorage.getItem('token')).access_token\r\n          }`,\r\n        },\r\n      });\r\n      comites\r\n        ? setComites(response.data)\r\n        : setComites([...comites, response.data]);\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    }\r\n  }\r\n  async function saveComite(e) {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await api.post(\r\n        '/comites',\r\n        {\r\n          nome,\r\n          comite_numero,\r\n          comite_pai_id,\r\n          localizacao,\r\n          estado,\r\n          descricao,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${\r\n              JSON.parse(localStorage.getItem('token')).access_token\r\n            }`,\r\n          },\r\n        }\r\n      );\r\n      if (Object.keys(response.data).length > 0) {\r\n        setNome('');\r\n        setComite_numero('');\r\n        setComite_pai_id(null);\r\n        setLocalizacao('');\r\n        setEstado('');\r\n        setDescricao('');\r\n        setToastMsg('Criado com sucesso!');\r\n        setToastClasses('text-dark');\r\n        setToastShow(true);\r\n        setTimeout(() => (window.location.href = '/comite'), 2500);\r\n      } else {\r\n        setToastMsg('Falha ao criar novo Comité!');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n      } else {\r\n        setToastMsg('Falha ao criar novo Comité!');\r\n      }\r\n      setToastClasses('bg-warning text-white');\r\n      setToastShow(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Toast\r\n        onClose={() => setToastShow(false)}\r\n        show={toastShow}\r\n        delay={2500}\r\n        autohide\r\n      >\r\n        <Toast.Body className={`${toastClasses}`}>\r\n          <strong>{toastMsg}</strong>\r\n        </Toast.Body>\r\n      </Toast>\r\n      <form>\r\n        <div className=\"row content-header\">\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-12\">\r\n            <Link className=\"text-link text-link-view\" to={'/comite'}>\r\n              <button className=\"btn btn-second mb-1\">Voltar</button>\r\n            </Link>\r\n          </div>\r\n          <h3 className=\"col-lg-9 col-md-9 col-sm-8 col-xs-12\">\r\n            Criar novo Comité\r\n          </h3>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Nome do Comité</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nome do Comité\"\r\n                value={nome}\r\n                onChange={(e) => setNome(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Comité nº</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Comité nº\"\r\n                value={comite_numero}\r\n                onChange={(e) => setComite_numero(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Comité tutelar</label>\r\n              <select\r\n                onChange={(e) => setComite_pai_id(e.target.value)}\r\n                className=\"custom-select\"\r\n              >\r\n                <option key=\"-1\" value=\"0\">\r\n                  Escolhe um Comité\r\n                </option>\r\n                {comites.map((value, key) => (\r\n                  <option key={key} value={value.id}>\r\n                    {value.nome}\r\n                  </option>\r\n                ))}\r\n                <option value={null}>Sem Comité tutelar</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Estado do Comité</label>\r\n              <select\r\n                onChange={(e) => setEstado(e.target.value)}\r\n                className=\"custom-select\"\r\n              >\r\n                <option value=\"0\">Escolhe um estado</option>\r\n                <option value=\"Activo\">Activo</option>\r\n                <option value=\"Suspenso\">Suspenso</option>\r\n                <option value=\"Fechado\">Fechado</option>\r\n                <option value=\"Em manutenção\">Em manutenção</option>\r\n                <option value=\"Por abrir\">Por abrir</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Localização do Comité</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                value={localizacao}\r\n                onChange={(e) => setLocalizacao(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Descrição</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                value={descricao}\r\n                onChange={(e) => setDescricao(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-master btn-lg btn-block\"\r\n          onClick={saveComite}\r\n        >\r\n          Criar\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ComiteCreate;\r\n","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Nucleo\\create.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Nucleo\\update.js",["155"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { Modal, Toast } from 'react-bootstrap';\r\nimport api from '../../services/Api';\r\n\r\nfunction NucleoUpdate() {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [toastShow, setToastShow] = useState(false);\r\n  const [toastMsg, setToastMsg] = useState('');\r\n  const [toastClasses, setToastClasses] = useState('');\r\n  const [nome, setNome] = useState('');\r\n  const [sigla, setSigla] = useState('');\r\n  const [descricao, setDescricao] = useState('');\r\n  const [estado, setEstado] = useState('');\r\n  const { nucleo_id } = useParams();\r\n\r\n  useEffect(() => {\r\n    getNucleoById(nucleo_id);\r\n  }, []);\r\n\r\n  async function getNucleoById(nucleo_id) {\r\n    try {\r\n      const response = await api.get(`/nucleos/${nucleo_id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${\r\n            JSON.parse(localStorage.getItem('token')).access_token\r\n          }`,\r\n        },\r\n      });\r\n      const [res] = response.data;\r\n      setNome(res.nome);\r\n      setSigla(res.sigla);\r\n      setEstado(res.estado);\r\n      if (res.descricao === null) {\r\n        setDescricao('');\r\n      } else {\r\n        setDescricao(res.descricao);\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function updateNucleo() {\r\n    setModalShow(false);\r\n    try {\r\n      const response = await api.put(\r\n        `/nucleos/${nucleo_id}`,\r\n        {\r\n          nome,\r\n          sigla,\r\n          estado,\r\n          descricao,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${\r\n              JSON.parse(localStorage.getItem('token')).access_token\r\n            }`,\r\n          },\r\n        }\r\n      );\r\n      if (Object.keys(response.data).length) {\r\n        setNome('');\r\n        setSigla('');\r\n        setEstado('');\r\n        setDescricao('');\r\n        setToastMsg('Alterado com sucesso!');\r\n        setToastClasses('text-dark');\r\n        setToastShow(true);\r\n        setTimeout(() => (window.location.href = '/nucleo'), 2000);\r\n      } else {\r\n        setToastMsg('Falha ao fazer as alterações!');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n      } else {\r\n        setToastMsg('Falha ao fazer as alterações!');\r\n      }\r\n      setToastClasses('bg-warning text-white');\r\n      setToastShow(true);\r\n    }\r\n  }\r\n\r\n  function handleClose() {\r\n    setModalShow(false);\r\n    setToastMsg('Alterações canceladas!');\r\n    setToastClasses('bg-warning text-white');\r\n    setToastShow(true);\r\n  }\r\n  return (\r\n    <>\r\n      <Toast\r\n        onClose={() => setToastShow(false)}\r\n        show={toastShow}\r\n        delay={2500}\r\n        autohide\r\n      >\r\n        <Toast.Body className={`${toastClasses}`}>\r\n          <strong>{toastMsg}</strong>\r\n        </Toast.Body>\r\n      </Toast>\r\n      <form>\r\n        <div className=\"row content-header\">\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-12\">\r\n            <Link className=\"text-link text-link-view\" to={'/nucleo'}>\r\n              <button className=\"btn btn-second mb-1\">Voltar</button>\r\n            </Link>\r\n          </div>\r\n          <h3 className=\"col-lg-9 col-md-9 col-sm-8 col-xs-12\">\r\n            Actualização de dados da actividade\r\n          </h3>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Nome</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nome do Núcleo\"\r\n                value={nome}\r\n                onChange={(e) => setNome(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Sigla</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Sigla\"\r\n                value={sigla}\r\n                onChange={(e) => setSigla(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Estado do núcleo</label>\r\n              <select\r\n                onChange={(e) => setEstado(e.target.value)}\r\n                className=\"custom-select\"\r\n              >\r\n                <option value=\"0\">Escolhe um estado</option>\r\n                <option value=\"Activo\">Activo</option>\r\n                <option value=\"Suspenso\">Suspenso</option>\r\n                <option value=\"Fechado\">Fechado</option>\r\n                <option value=\"Por abrir\">Por abrir</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Descrição</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                value={descricao}\r\n                onChange={(e) => setDescricao(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-master btn-lg btn-block\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setModalShow(true);\r\n          }}\r\n        >\r\n          Actualizar\r\n        </button>\r\n      </form>\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"text-dark\">Alerta - SIIM</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-dark\">\r\n          Tem certeza que deseja realizar as alterações?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-second\" onClick={handleClose}>\r\n            Cancelar\r\n          </button>\r\n          <button className=\"btn btn-master\" onClick={updateNucleo}>\r\n            Confirmar\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NucleoUpdate;\r\n","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Comite\\update.js",["156"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { Modal, Toast } from 'react-bootstrap';\r\nimport api from '../../services/Api';\r\n\r\nfunction ComiteUpdate() {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [toastShow, setToastShow] = useState(false);\r\n  const [toastMsg, setToastMsg] = useState('');\r\n  const [toastClasses, setToastClasses] = useState('');\r\n  const [nome, setNome] = useState('');\r\n  const [comite_numero, setComite_numero] = useState('');\r\n  const [comite_pai_id, setComite_pai_id] = useState('');\r\n  const [localizacao, setLocalizacao] = useState('');\r\n  const [estado, setEstado] = useState('');\r\n  const [descricao, setDescricao] = useState('');\r\n  const [comites, setComites] = useState([]);\r\n  const { comite_id } = useParams();\r\n\r\n  useEffect(() => {\r\n    getComites();\r\n    getComiteById(comite_id);\r\n  }, []);\r\n\r\n  async function getComiteById(comite_id) {\r\n    try {\r\n      const response = await api.get(`/comites/${comite_id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${\r\n            JSON.parse(localStorage.getItem('token')).access_token\r\n          }`,\r\n        },\r\n      });\r\n      const [res] = response.data;\r\n      setNome(res.nome);\r\n      setComite_numero(res.comite_numero);\r\n      setComite_pai_id(res.comite_pai_id);\r\n      setLocalizacao(res.localizacao);\r\n      setEstado(res.estado);\r\n      if (res.descricao === null) {\r\n        setDescricao('');\r\n      } else {\r\n        setDescricao(res.descricao);\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function getComites() {\r\n    try {\r\n      const response = await api.get('/comites/all/any', {\r\n        headers: {\r\n          Authorization: `Bearer ${\r\n            JSON.parse(localStorage.getItem('token')).access_token\r\n          }`,\r\n        },\r\n      });\r\n      comites\r\n        ? setComites(response.data)\r\n        : setComites([...comites, response.data]);\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function updateComite() {\r\n    setModalShow(false);\r\n    try {\r\n      const response = await api.put(\r\n        `/comites/${comite_id}`,\r\n        {\r\n          nome,\r\n          comite_numero,\r\n          comite_pai_id,\r\n          localizacao,\r\n          estado,\r\n          descricao,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${\r\n              JSON.parse(localStorage.getItem('token')).access_token\r\n            }`,\r\n          },\r\n        }\r\n      );\r\n      if (Object.keys(response.data).length > 0) {\r\n        setNome('');\r\n        setComite_numero('');\r\n        setComite_pai_id('');\r\n        setLocalizacao('');\r\n        setEstado('');\r\n        setDescricao('');\r\n        setToastMsg('Alterado com sucesso!');\r\n        setToastClasses('text-dark');\r\n        setToastShow(true);\r\n        setTimeout(() => (window.location.href = '/comite'), 2500);\r\n      } else {\r\n        setToastMsg('Falha ao fazer as alterações!');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n      } else {\r\n        setToastMsg('Falha ao fazer as alterações!');\r\n      }\r\n      setToastClasses('bg-warning text-white');\r\n      setToastShow(true);\r\n    }\r\n  }\r\n\r\n  function handleClose() {\r\n    setModalShow(false);\r\n    setToastMsg('Alterações canceladas!');\r\n    setToastClasses('bg-warning text-white');\r\n    setToastShow(true);\r\n  }\r\n  return (\r\n    <>\r\n      <Toast\r\n        onClose={() => setToastShow(false)}\r\n        show={toastShow}\r\n        delay={2500}\r\n        autohide\r\n      >\r\n        <Toast.Body className={`${toastClasses}`}>\r\n          <strong>{toastMsg}</strong>\r\n        </Toast.Body>\r\n      </Toast>\r\n      <form>\r\n        <div className=\"row content-header\">\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-12\">\r\n            <Link className=\"text-link text-link-view\" to={'/comite'}>\r\n              <button className=\"btn btn-second mb-1\">Voltar</button>\r\n            </Link>\r\n          </div>\r\n          <h3 className=\"col-lg-9 col-md-9 col-sm-8 col-xs-12\">\r\n            Actualização de dados do Comité\r\n          </h3>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Nome do Comité</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nome do Comité\"\r\n                value={nome}\r\n                onChange={(e) => setNome(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Comité nº</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Comité nº\"\r\n                value={comite_numero}\r\n                onChange={(e) => setComite_numero(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Comité tutelar</label>\r\n              <select\r\n                onChange={(e) => setComite_pai_id(e.target.value)}\r\n                className=\"custom-select\"\r\n              >\r\n                <option key=\"-1\" value=\"0\">\r\n                  Escolhe um Comité\r\n                </option>\r\n                {comites.map((value, key) => (\r\n                  <option key={key} value={value.id}>\r\n                    {value.nome}\r\n                  </option>\r\n                ))}\r\n                <option value={null}>Sem Comité tutelar</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Estado do Comité</label>\r\n              <select\r\n                onChange={(e) => setEstado(e.target.value)}\r\n                className=\"custom-select\"\r\n              >\r\n                <option value=\"0\">Escolhe um estado</option>\r\n                <option value=\"Activo\">Activo</option>\r\n                <option value=\"Suspenso\">Suspenso</option>\r\n                <option value=\"Fechado\">Fechado</option>\r\n                <option value=\"Em manutenção\">Em manutenção</option>\r\n                <option value=\"Por abrir\">Por abrir</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Localização do Comité</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                value={localizacao}\r\n                onChange={(e) => setLocalizacao(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Descrição</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                value={descricao}\r\n                onChange={(e) => setDescricao(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-master btn-lg btn-block\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setModalShow(true);\r\n          }}\r\n        >\r\n          Actualizar\r\n        </button>\r\n      </form>\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"text-dark\">Alerta - SIIM</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-dark\">\r\n          Tem certeza que deseja realizar as alterações?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-second\" onClick={handleClose}>\r\n            Cancelar\r\n          </button>\r\n          <button className=\"btn btn-master\" onClick={updateComite}>\r\n            Confirmar\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ComiteUpdate;\r\n","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Militante\\create.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Militante\\update.js",["157","158"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { Modal, Toast } from 'react-bootstrap';\r\nimport api from '../../services/Api';\r\n\r\nfunction MilitanteUpdate() {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [toastShow, setToastShow] = useState(false);\r\n  const [toastMsg, setToastMsg] = useState('');\r\n  const [toastClasses, setToastClasses] = useState('');\r\n  const [nome, setNome] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [morada, setMorada] = useState('');\r\n  const [telefone1, setTelefone1] = useState('');\r\n  const [telefone2, setTelefone2] = useState('');\r\n  const [data_nascimento, setData_nascimento] = useState('');\r\n  const [ano_inicio_militancia, setAno_inicio_militancia] = useState('');\r\n  const [grupo_eleitoral_numero, setGrupo_eleitoral_numero] = useState('');\r\n  const [cartao_eleitoral_numero, setCartao_eleitoral_numero] = useState('');\r\n  const [comite_id, setComite_id] = useState(0);\r\n  const [comites, setComites] = useState([]);\r\n  const [estado, setEstado] = useState('');\r\n  const [departamentos, setDepartamentos] = useState([]);\r\n  const [departamento_id, setDepartamento_id] = useState('');\r\n  const [cargos, setCargos] = useState([]);\r\n  const [cargo_id, setCargo_id] = useState('');\r\n  const [genero, setGenero] = useState('');\r\n  const { militante_id } = useParams();\r\n\r\n  useEffect(() => {\r\n    getComites();\r\n    getMilitanteById(militante_id);\r\n    getDepartamentos();\r\n  }, []);\r\n\r\n  async function getDepartamentos() {\r\n    try {\r\n      const response = await api.get(`/direccao`, {\r\n        headers: {\r\n          Authorization: `Bearer ${\r\n            JSON.parse(localStorage.getItem('token')).access_token\r\n          }`,\r\n        },\r\n      });\r\n      const { status, error } = response.data;\r\n      if (status !== undefined && !JSON.parse(status)) {\r\n        localStorage.clear();\r\n        setToastMsg(error);\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n        setTimeout(() => (window.location.href = '/goout'), 2800);\r\n        return;\r\n      }\r\n      if (Object.keys(response.data).length) {\r\n        setDepartamentos(response.data);\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function getCargos(depa_id) {\r\n    try {\r\n      const response = await api.get(`/funcaobydireccaoid/${depa_id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${\r\n            JSON.parse(localStorage.getItem('token')).access_token\r\n          }`,\r\n        },\r\n      });\r\n      const { status, error } = response.data;\r\n      if (status !== undefined && !JSON.parse(status)) {\r\n        localStorage.clear();\r\n        setToastMsg(error);\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n        setTimeout(() => (window.location.href = '/goout'), 2800);\r\n        return;\r\n      }\r\n      if (Object.keys(response.data).length) {\r\n        const [{ funcao }] = response.data;\r\n        if (funcao.length) {\r\n          setCargos(funcao);\r\n        } else {\r\n          const depa = departamentos[departamento_id].sigla;\r\n\r\n          setCargos([\r\n            {\r\n              id: 0,\r\n              nome: `${depa} está sem cargos`,\r\n            },\r\n          ]);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function getComites() {\r\n    try {\r\n      const response = await api.get('/comites/all/any', {\r\n        headers: {\r\n          Authorization: `Bearer ${\r\n            JSON.parse(localStorage.getItem('token')).access_token\r\n          }`,\r\n        },\r\n      });\r\n      const { status, error } = response.data;\r\n      if (status !== undefined && !JSON.parse(status)) {\r\n        localStorage.clear();\r\n        setToastMsg(error);\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n        setTimeout(() => (window.location.href = '/goout'), 2800);\r\n        return;\r\n      }\r\n      if (Object.keys(response.data).length > 0) {\r\n        setComites(response.data);\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function getMilitanteById(militante_id) {\r\n    try {\r\n      const response = await api.get(`/militantes/${militante_id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${\r\n            JSON.parse(localStorage.getItem('token')).access_token\r\n          }`,\r\n        },\r\n      });\r\n      const { status, error } = response.data;\r\n      if (status !== undefined && !JSON.parse(status)) {\r\n        localStorage.clear();\r\n        setToastMsg(error);\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n        setTimeout(() => (window.location.href = '/goout'), 2800);\r\n        return;\r\n      }\r\n      if (Object.keys(response.data).length > 0) {\r\n        const [res] = response.data;\r\n        setNome(res.nome);\r\n        setEmail(res.email);\r\n        setEstado(res.estado);\r\n        setMorada(res.morada);\r\n        setTelefone1(res.telefone1);\r\n        setTelefone2(res.telefone2);\r\n        setData_nascimento(res.data_nascimento);\r\n        setAno_inicio_militancia(res.ano_inicio_militancia);\r\n        setComite_id(res.comite_id);\r\n        setGrupo_eleitoral_numero(res.grupo_eleitoral_numero);\r\n        setCartao_eleitoral_numero(res.cartao_eleitoral_numero);\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function updateMilitante() {\r\n    setModalShow(false);\r\n    try {\r\n      const response = await api.put(\r\n        `/militantes/${militante_id}`,\r\n        {\r\n          nome,\r\n          email,\r\n          morada,\r\n          telefone1,\r\n          telefone2: telefone2 === '' ? null : telefone2,\r\n          data_nascimento,\r\n          ano_inicio_militancia,\r\n          comite_id,\r\n          estado,\r\n          genero,\r\n          grupo_eleitoral_numero,\r\n          cartao_eleitoral_numero,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${\r\n              JSON.parse(localStorage.getItem('token')).access_token\r\n            }`,\r\n          },\r\n        }\r\n      );\r\n      const { status, error } = response.data;\r\n      if (status !== undefined && !JSON.parse(status)) {\r\n        localStorage.clear();\r\n        setToastMsg(error);\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n        setTimeout(() => (window.location.href = '/goout'), 2800);\r\n        return;\r\n      }\r\n      let res;\r\n      console.log(departamento_id, cargo_id);\r\n      if (\r\n        (departamento_id > 0 || departamento_id !== '') &&\r\n        (cargo_id > 0 || cargo_id !== '')\r\n      ) {\r\n        res = await api.post(\r\n          `/militantes/${militante_id}/direccao_funcao`,\r\n          { direccao_id: departamento_id, funcao_id: cargo_id },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${\r\n                JSON.parse(localStorage.getItem('token')).access_token\r\n              }`,\r\n            },\r\n          }\r\n        );\r\n      }\r\n      if (Object.keys(response.data).length) {\r\n        setNome('');\r\n        setEmail('');\r\n        setMorada('');\r\n        setTelefone1('');\r\n        setTelefone2('');\r\n        setData_nascimento('');\r\n        setAno_inicio_militancia('');\r\n        setComite_id(0);\r\n        setGrupo_eleitoral_numero('');\r\n        setCartao_eleitoral_numero('');\r\n        setEstado('');\r\n        setCargo_id(0);\r\n        setDepartamento_id(0);\r\n        setToastMsg('Alterado com sucesso!');\r\n        setToastClasses('text-dark');\r\n        setToastShow(true);\r\n        setTimeout(() => (window.location.href = '/militante'), 2000);\r\n      } else {\r\n        setToastMsg('Falha ao fazer as alterações!');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n      } else {\r\n        setToastMsg('Falha ao fazer as alterações!');\r\n      }\r\n      setToastClasses('bg-warning text-white');\r\n      setToastShow(true);\r\n    }\r\n  }\r\n\r\n  function handleClose() {\r\n    setModalShow(false);\r\n    setToastMsg('Alterações canceladas!');\r\n    setToastClasses('bg-warning text-white');\r\n    setToastShow(true);\r\n  }\r\n  return (\r\n    <>\r\n      <Toast\r\n        onClose={() => setToastShow(false)}\r\n        show={toastShow}\r\n        delay={2500}\r\n        autohide\r\n      >\r\n        <Toast.Body className={`${toastClasses}`}>\r\n          <strong>{toastMsg}</strong>\r\n        </Toast.Body>\r\n      </Toast>\r\n      <form>\r\n        <div className=\"row content-header\">\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-12\">\r\n            <Link className=\"text-link text-link-view\" to={'/militante'}>\r\n              <button className=\"btn btn-second mb-1\">Voltar</button>\r\n            </Link>\r\n          </div>\r\n          <h3 className=\"col-lg-9 col-md-9 col-sm-8 col-xs-12\">\r\n            Actualização de dados do militante\r\n          </h3>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Nome</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nome do militante\"\r\n                value={nome}\r\n                onChange={(e) => setNome(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Género</label>\r\n              <select\r\n                onChange={(e) => setGenero(e.target.value)}\r\n                className=\"custom-select\"\r\n              >\r\n                <option value=\"0\">Escolhe um género</option>\r\n                <option value=\"M\">Masculino</option>\r\n                <option value=\"F\">Femenino</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Comité</label>\r\n              <select\r\n                onChange={(e) => setComite_id(e.target.value)}\r\n                className=\"custom-select\"\r\n              >\r\n                <option key=\"-1\" value=\"0\">\r\n                  Escolhe um Comité\r\n                </option>\r\n                {comites.map((value, key) => (\r\n                  <option key={key} value={value.id}>\r\n                    {value.nome}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Telefone 1</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Telefone 1\"\r\n                maxLength=\"9\"\r\n                value={telefone1}\r\n                onChange={(e) => setTelefone1(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Telefone 2</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Telefone 2\"\r\n                maxLength=\"9\"\r\n                value={telefone2}\r\n                onChange={(e) => setTelefone2(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Data de Nascimento</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"2021-02-01\"\r\n                value={data_nascimento}\r\n                onChange={(e) => setData_nascimento(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Ano de Ingresso</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"1954\"\r\n                value={ano_inicio_militancia}\r\n                onChange={(e) => setAno_inicio_militancia(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Cartão Eleitoral nº</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Cartão Eleitoral nº\"\r\n                value={cartao_eleitoral_numero}\r\n                onChange={(e) => setCartao_eleitoral_numero(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Grupo Eleitoral nº</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Grupo Eleitoral nº\"\r\n                value={grupo_eleitoral_numero}\r\n                onChange={(e) => setGrupo_eleitoral_numero(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>E-mail</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"E-mail\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Estado do militante</label>\r\n              <select\r\n                onChange={(e) => setEstado(e.target.value)}\r\n                className=\"custom-select\"\r\n              >\r\n                <option value=\"0\">Escolhe um estado</option>\r\n                <option value=\"Activo\">Activo</option>\r\n                <option value=\"Suspenso\">Suspenso</option>\r\n                <option value=\"Em analise\">Em analise</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Departamento</label>\r\n              <select\r\n                className=\"custom-select\"\r\n                onChange={(e) => {\r\n                  setDepartamento_id(e.target.value);\r\n                  setCargos([]);\r\n                  getCargos(e.target.value);\r\n                }}\r\n              >\r\n                <option value=\"-1\">Escolhe um departamento</option>\r\n                {departamentos.map((value, key) => {\r\n                  return (\r\n                    <option key={key} value={value.id}>\r\n                      {value.nome}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Cargo</label>\r\n              <select\r\n                className=\"custom-select\"\r\n                onChange={(e) => setCargo_id(e.target.value)}\r\n              >\r\n                <option value=\"-1\">Escolhe um cargo</option>\r\n                {cargos.map((value, key) => {\r\n                  return (\r\n                    <option key={key} value={value.id}>\r\n                      {value.nome}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Morada</label>\r\n\r\n              <textarea\r\n                className=\"form-control\"\r\n                placeholder=\"Morada\"\r\n                value={morada}\r\n                onChange={(e) => setMorada(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-master btn-lg btn-block\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setModalShow(true);\r\n          }}\r\n        >\r\n          Actualizar\r\n        </button>\r\n      </form>\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"text-dark\">Alerta - SIIM</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-dark\">\r\n          Tem certeza que deseja realizar as alterações?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-second\" onClick={handleClose}>\r\n            Cancelar\r\n          </button>\r\n          <button className=\"btn btn-master\" onClick={updateMilitante}>\r\n            Confirmar\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MilitanteUpdate;\r\n","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Agenda\\create.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Agenda\\update.js",["159"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { Modal, Toast } from 'react-bootstrap';\r\nimport api from '../../services/Api';\r\n\r\nfunction AgendaUpdate() {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [toastShow, setToastShow] = useState(false);\r\n  const [toastMsg, setToastMsg] = useState('');\r\n  const [toastClasses, setToastClasses] = useState('');\r\n  const [nome_actividade, setNome_actividade] = useState('');\r\n  const [local, setLocal] = useState('');\r\n  const [descricao, setDescricao] = useState('');\r\n  const [data, setData] = useState('');\r\n  const [hora, setHora] = useState('');\r\n  const [convidados, setConvidados] = useState('');\r\n  const [estado, setEstado] = useState('');\r\n  const { agenda_id } = useParams();\r\n\r\n  useEffect(() => {\r\n    getAgendaById(agenda_id);\r\n  }, []);\r\n\r\n  async function getAgendaById(agenda_id) {\r\n    try {\r\n      const response = await api.get(`/agenda/${agenda_id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${\r\n            JSON.parse(localStorage.getItem('token')).access_token\r\n          }`,\r\n        },\r\n      });\r\n      const [res] = response.data;\r\n      setNome_actividade(res.nome_actividade);\r\n      setLocal(res.local);\r\n      setConvidados(res.convidados);\r\n      if (res.descricao === null) {\r\n        setDescricao('');\r\n      } else {\r\n        setDescricao(res.descricao);\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function updateAgenda() {\r\n    setModalShow(false);\r\n    try {\r\n      const response = await api.put(\r\n        `/agenda/${agenda_id}`,\r\n        {\r\n          nome_actividade,\r\n          local,\r\n          convidados,\r\n          data_e_hora: data + 'T' + hora + ':00.698Z',\r\n          estado,\r\n          descricao,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${\r\n              JSON.parse(localStorage.getItem('token')).access_token\r\n            }`,\r\n          },\r\n        }\r\n      );\r\n      if (Object.keys(response.data).length > 0) {\r\n        setNome_actividade('');\r\n        setLocal('');\r\n        setDescricao('');\r\n        setData('');\r\n        setHora('');\r\n        setEstado('');\r\n        setConvidados('');\r\n        setToastMsg('Alterado com sucesso!');\r\n        setToastClasses('text-dark');\r\n        setToastShow(true);\r\n        setTimeout(() => (window.location.href = '/agenda'), 2000);\r\n      } else {\r\n        setToastMsg('Falha ao fazer as alterações!');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n      } else {\r\n        setToastMsg('Falha ao fazer as alterações!');\r\n      }\r\n      setToastClasses('bg-warning text-white');\r\n      setToastShow(true);\r\n    }\r\n  }\r\n\r\n  function handleClose() {\r\n    setModalShow(false);\r\n    setToastMsg('Alterações canceladas!');\r\n    setToastClasses('bg-warning text-white');\r\n    setToastShow(true);\r\n  }\r\n  return (\r\n    <>\r\n      <Toast\r\n        onClose={() => setToastShow(false)}\r\n        show={toastShow}\r\n        delay={2500}\r\n        autohide\r\n      >\r\n        <Toast.Body className={`${toastClasses}`}>\r\n          <strong>{toastMsg}</strong>\r\n        </Toast.Body>\r\n      </Toast>\r\n      <form>\r\n        <div className=\"row content-header\">\r\n          <div className=\"col-lg-3 col-md-3 col-sm-4 col-xs-12\">\r\n            <Link className=\"text-link text-link-view\" to={'/agenda'}>\r\n              <button className=\"btn btn-second mb-1\">Voltar</button>\r\n            </Link>\r\n          </div>\r\n          <h3 className=\"col-lg-9 col-md-9 col-sm-8 col-xs-12\">\r\n            Actualização de dados da actividade\r\n          </h3>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Nome da actividade</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nome da actividade\"\r\n                value={nome_actividade}\r\n                onChange={(e) => setNome_actividade(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Local</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Local da actividade\"\r\n                value={local}\r\n                onChange={(e) => setLocal(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Data</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={data}\r\n                onChange={(e) => setData(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Hora</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"ex.: 09:30\"\r\n                value={hora}\r\n                onChange={(e) => setHora(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Convidados</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                placeholder=\"Convidados para actividade\"\r\n                value={convidados}\r\n                onChange={(e) => setConvidados(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Descrição</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                value={descricao}\r\n                onChange={(e) => setDescricao(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n            <div className=\"form-group\">\r\n              <label>Estado da actividade</label>\r\n              <select\r\n                onChange={(e) => setEstado(e.target.value)}\r\n                className=\"custom-select\"\r\n              >\r\n                <option value=\"0\">Escolhe um estado</option>\r\n                <option value=\"Activa\">Activa</option>\r\n                <option value=\"Cancelada\">Cancelada</option>\r\n                <option value=\"Em analise\">Em analise</option>\r\n                <option value=\"Realizada\">Realizada</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-master btn-lg btn-block\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setModalShow(true);\r\n          }}\r\n        >\r\n          Actualizar\r\n        </button>\r\n      </form>\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"text-dark\">Alerta - SIIM</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-dark\">\r\n          Tem certeza que deseja realizar as alterações?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-second\" onClick={handleClose}>\r\n            Cancelar\r\n          </button>\r\n          <button className=\"btn btn-master\" onClick={updateAgenda}>\r\n            Confirmar\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AgendaUpdate;\r\n","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\User\\index.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Comite\\index.js",["160"],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Nucleo\\index.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Militante\\index.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Agenda\\index.js",["161"],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\NavBarComponent\\index.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\PrivateRoute\\index.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Charts\\index.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Home\\index.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Settings\\index.js",["162"],"import {\r\n  Modal,\r\n  Toast,\r\n  Tabs,\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  Nav,\r\n  Accordion,\r\n  Card,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport React, { useState, useEffect } from 'react';\r\nimport api from '../../services/Api';\r\nimport Loading from '../Loading';\r\nimport ListItems from './listItems';\r\nimport './style.css';\r\n\r\nfunction Settings() {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [toastShow, setToastShow] = useState(false);\r\n  const [toastMsg, setToastMsg] = useState('');\r\n  const [toastClasses, setToastClasses] = useState('');\r\n  const [settingKey, setSettingKey] = useState('home');\r\n  const [data, setData] = useState([]);\r\n  const [nomeDireccao, setNomeDireccao] = useState('');\r\n  const [siglaDireccao, setSiglaDireccao] = useState('');\r\n  const [descricaoDireccao, setDescricaoDireccao] = useState('');\r\n  const [nomeFuncao, setNomeFuncao] = useState('');\r\n  const [siglaFuncao, setSiglaFuncao] = useState('');\r\n  const [descricaoFuncao, setDescricaoFuncao] = useState('');\r\n  const [departamentos, setDepartamentos] = useState([]);\r\n  const [departamento_id, setDepartamento_id] = useState(0);\r\n  const [cargos, setCargos] = useState([]);\r\n  const [cargo_id, setCargo_id] = useState(0);\r\n  const [comites, setComites] = useState([]);\r\n  const [idGeral, setIdGeral] = useState('');\r\n  const [nomeGeral, setNomeGeral] = useState('');\r\n  const [siglaGeral, setSiglaGeral] = useState('');\r\n  const [descricaoGeral, setDescricaoGeral] = useState('');\r\n  const [nomeSelected, setNomeSelected] = useState('');\r\n  const [siglaSelected, setSiglaSelected] = useState('');\r\n  const [descricaoSelected, setDescricaoSelected] = useState('');\r\n  const [comite_id, setComite_id] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getDepartamentos();\r\n    getComites();\r\n    getCargos();\r\n  }, []);\r\n\r\n  async function showModal(id) {\r\n    if (settingKey === 'direccao') {\r\n      const response = await getDepartamentos(id);\r\n      setIdGeral(btoa(response.id));\r\n      setNomeGeral(response.nome);\r\n      setSiglaGeral(response.sigla);\r\n      setDescricaoGeral(response.descricao);\r\n    } else if (settingKey === 'funcao') {\r\n      const response = await getCargos(id);\r\n      setIdGeral(btoa(response.id));\r\n      setNomeGeral(response.nome);\r\n      setSiglaGeral(response.sigla);\r\n      setDescricaoGeral(response.descricao);\r\n    }\r\n    setModalShow(true);\r\n  }\r\n\r\n  async function create(e) {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await api.post(\r\n        `/${settingKey}`,\r\n        {\r\n          nome: settingKey === 'direccao' ? nomeDireccao : nomeFuncao,\r\n          sigla: settingKey === 'direccao' ? siglaDireccao : siglaFuncao,\r\n          descricao:\r\n            settingKey === 'direccao' ? descricaoDireccao : descricaoFuncao,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${\r\n              JSON.parse(localStorage.getItem('token')).access_token\r\n            }`,\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        settingKey === 'direccao' ? setNomeDireccao('') : setNomeFuncao('');\r\n        settingKey === 'direccao' ? setSiglaDireccao('') : setSiglaFuncao('');\r\n        settingKey === 'direccao'\r\n          ? setDescricaoDireccao('')\r\n          : setDescricaoFuncao('');\r\n        setToastMsg('Criado com sucesso!');\r\n        setToastClasses('text-dark');\r\n        setToastShow(true);\r\n        setTimeout(() => (window.location.href = '/settings'), 2000);\r\n      } else {\r\n        setToastMsg('Falha na criação!');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n      } else {\r\n        setToastMsg('Falha na criação!');\r\n      }\r\n      setToastClasses('bg-warning text-white');\r\n      setToastShow(true);\r\n    }\r\n  }\r\n\r\n  async function update() {\r\n    try {\r\n      const response = await api.put(\r\n        `/${settingKey}/${idGeral}`,\r\n        {\r\n          nome: nomeGeral,\r\n          sigla: siglaGeral,\r\n          descricao: descricaoGeral,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${\r\n              JSON.parse(localStorage.getItem('token')).access_token\r\n            }`,\r\n          },\r\n        }\r\n      );\r\n      setModalShow(false);\r\n      if (response.status === 200) {\r\n        setIdGeral('');\r\n        setNomeGeral('');\r\n        setSiglaGeral('');\r\n        setDescricaoGeral('');\r\n        setToastMsg(response.data);\r\n        setToastClasses('text-dark');\r\n        setToastShow(true);\r\n        setTimeout(() => (window.location.href = '/settings'), 2000);\r\n      } else {\r\n        setToastMsg('Falha ao fazer as alterações!');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    } catch (err) {\r\n      setModalShow(false);\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n      } else {\r\n        setToastMsg('Falha ao fazer as alterações!');\r\n      }\r\n      setToastClasses('bg-warning text-white');\r\n      setToastShow(true);\r\n    }\r\n  }\r\n\r\n  async function associete(e) {\r\n    e.preventDefault();\r\n    try {\r\n      const path =\r\n        settingKey === 'direccao'\r\n          ? `/comites/${comite_id}/direccao`\r\n          : `/direccao/${departamento_id}/funcao`;\r\n      const data = {\r\n        nome: nomeSelected,\r\n        sigla: siglaSelected,\r\n        descricao: descricaoSelected,\r\n      };\r\n      const response = await api.post(path, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${\r\n            JSON.parse(localStorage.getItem('token')).access_token\r\n          }`,\r\n        },\r\n      });\r\n      if (response.status === 200) {\r\n        setNomeSelected('');\r\n        setSiglaSelected('');\r\n        setDescricaoSelected('');\r\n        setToastMsg('Alterado com sucesso!');\r\n        setToastClasses('text-dark');\r\n        setToastShow(true);\r\n        setTimeout(() => (window.location.href = '/settings'), 2000);\r\n      } else {\r\n        setToastMsg('Falha ao fazer as alterações!');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    } catch (err) {\r\n      setModalShow(false);\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n      } else {\r\n        setToastMsg('Falha ao fazer as alterações!');\r\n      }\r\n      setToastClasses('bg-warning text-white');\r\n      setToastShow(true);\r\n    }\r\n  }\r\n\r\n  async function getDepartamentos(id) {\r\n    let path = `/direccao`;\r\n    if (id !== undefined) {\r\n      path = `/direccao/${id}`;\r\n    }\r\n    try {\r\n      const response = await api.get(path, {\r\n        headers: {\r\n          Authorization: `Bearer ${\r\n            JSON.parse(localStorage.getItem('token')).access_token\r\n          }`,\r\n        },\r\n      });\r\n      const { status, error } = response.data;\r\n      if (status !== undefined && !JSON.parse(status)) {\r\n        localStorage.clear();\r\n        setToastMsg(error);\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n        setTimeout(() => (window.location.href = '/goout'), 2800);\r\n        return;\r\n      }\r\n      if (response.status === 200 && id === undefined) {\r\n        setDepartamentos(response.data);\r\n      } else {\r\n        return response.data[0];\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function getCargos(id) {\r\n    let path = `/funcao`;\r\n    if (id !== undefined) {\r\n      path = `/funcao/${id}`;\r\n    }\r\n    try {\r\n      const response = await api.get(path, {\r\n        headers: {\r\n          Authorization: `Bearer ${\r\n            JSON.parse(localStorage.getItem('token')).access_token\r\n          }`,\r\n        },\r\n      });\r\n      const { status, error } = response.data;\r\n      if (status !== undefined && !JSON.parse(status)) {\r\n        localStorage.clear();\r\n        setToastMsg(error);\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n        setTimeout(() => (window.location.href = '/goout'), 2800);\r\n        return;\r\n      }\r\n      if (response.status === 200 && id === undefined) {\r\n        setCargos(response.data);\r\n      } else {\r\n        return response.data[0];\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function getComites() {\r\n    try {\r\n      const response = await api.get('/comites/all/any', {\r\n        headers: {\r\n          Authorization: `Bearer ${\r\n            JSON.parse(localStorage.getItem('token')).access_token\r\n          }`,\r\n        },\r\n      });\r\n      const { status, error } = response.data;\r\n      if (status !== undefined && !JSON.parse(status)) {\r\n        localStorage.clear();\r\n        setToastMsg(error);\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n        setTimeout(() => (window.location.href = '/goout'), 2800);\r\n        return;\r\n      }\r\n      if (Object.keys(response.data).length) {\r\n        setComites(response.data);\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleClose() {\r\n    setModalShow(false);\r\n    setToastMsg('Alterações canceladas!');\r\n    setToastClasses('bg-warning text-white');\r\n    setToastShow(true);\r\n  }\r\n\r\n  async function changeHire(id) {\r\n    let response;\r\n    if (settingKey === 'direccao') {\r\n      setDepartamento_id(btoa(id));\r\n      response = await getDepartamentos(btoa(id));\r\n    } else if (settingKey === 'funcao') {\r\n      setCargo_id(btoa(id));\r\n      response = await getCargos(btoa(id));\r\n    }\r\n    setNomeSelected(response.nome);\r\n    setSiglaSelected(response.sigla);\r\n    setDescricaoSelected(response.descricao);\r\n  }\r\n\r\n  async function handleItems(key) {\r\n    setSettingKey(key);\r\n    try {\r\n      const response = await api.get(`/${key}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${\r\n            JSON.parse(localStorage.getItem('token')).access_token\r\n          }`,\r\n        },\r\n      });\r\n      if (response.data) {\r\n        setData(response.data);\r\n      }\r\n    } catch (err) {\r\n      if (/status code 401$/i.test(err)) {\r\n        setToastMsg('A sessão expirou! Sai e volte a entrar.');\r\n        setToastClasses('bg-warning text-white');\r\n        setToastShow(true);\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Toast\r\n        onClose={() => setToastShow(false)}\r\n        show={toastShow}\r\n        delay={2500}\r\n        autohide\r\n      >\r\n        <Toast.Body className={`${toastClasses}`}>\r\n          <strong>{toastMsg}</strong>\r\n        </Toast.Body>\r\n      </Toast>\r\n      <h3>Definições do Sistema</h3>\r\n      <Tabs\r\n        id=\"controlled-tab-example\"\r\n        activeKey={settingKey}\r\n        onSelect={(k) => handleItems(k)}\r\n        mountOnEnter={true}\r\n        /* unmountOnExit={true} */\r\n      >\r\n        <Tab eventKey=\"direccao\" title=\"Direcções\" className=\"pt-3\">\r\n          <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"lista\">\r\n            <Row>\r\n              <Col sm={3}>\r\n                <Nav variant=\"pills\" className=\"flex-column\">\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"lista\">Listar direcções</Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"nova\">Nova direcção</Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"associar\">Associar</Nav.Link>\r\n                  </Nav.Item>\r\n                </Nav>\r\n              </Col>\r\n              <Col sm={9}>\r\n                <Tab.Content>\r\n                  <Tab.Pane eventKey=\"lista\">\r\n                    <Loading\r\n                      myRender={() => (\r\n                        <ListItems data={data} showModal={showModal} />\r\n                      )}\r\n                    />\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"nova\">\r\n                    <form>\r\n                      <h3>Nova direcção ou departamento</h3>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n                          <div className=\"form-group\">\r\n                            <label>Nome da direcção</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Nome da direcção\"\r\n                              value={nomeDireccao}\r\n                              onChange={(e) => setNomeDireccao(e.target.value)}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n                          <div className=\"form-group\">\r\n                            <label>Sigla</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Sigla\"\r\n                              value={siglaDireccao}\r\n                              onChange={(e) => setSiglaDireccao(e.target.value)}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n                          <div className=\"form-group\">\r\n                            <label>Descrição</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Descrição\"\r\n                              value={descricaoDireccao}\r\n                              onChange={(e) =>\r\n                                setDescricaoDireccao(e.target.value)\r\n                              }\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-master btn-lg btn-block\"\r\n                        onClick={create}\r\n                      >\r\n                        Criar\r\n                      </button>\r\n                    </form>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"associar\">\r\n                    <form>\r\n                      <h3>Associar direcção ao comité</h3>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n                          <div className=\"form-group\">\r\n                            <label>Comité</label>\r\n                            <select\r\n                              onChange={(e) =>\r\n                                setComite_id(btoa(e.target.value))\r\n                              }\r\n                              className=\"custom-select\"\r\n                            >\r\n                              <option key=\"-1\" value=\"0\">\r\n                                Escolhe um Comité\r\n                              </option>\r\n                              {comites.map((value, key) => (\r\n                                <option key={key} value={value.id}>\r\n                                  {value.nome}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n                          <div className=\"form-group\">\r\n                            <label>Direcção</label>\r\n                            <select\r\n                              className=\"custom-select\"\r\n                              onChange={(e) => {\r\n                                changeHire(e.target.value);\r\n                              }}\r\n                            >\r\n                              <option value=\"-1\">Escolhe uma direcção</option>\r\n                              {departamentos.map((value, key) => {\r\n                                return (\r\n                                  <option key={key} value={value.id}>\r\n                                    {value.nome}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"btn btn-master btn-lg btn-block\"\r\n                          onClick={associete}\r\n                        >\r\n                          Associar\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </Col>\r\n            </Row>\r\n          </Tab.Container>\r\n        </Tab>\r\n        <Tab eventKey=\"funcao\" title=\"Funções ou cargos\" className=\"pt-3\">\r\n          <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"listar\">\r\n            <Row>\r\n              <Col sm={3}>\r\n                <Nav variant=\"pills\" className=\"flex-column\">\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"listar\"> Listar funções</Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"nova\">Nova função</Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"associar\">Associar</Nav.Link>\r\n                  </Nav.Item>\r\n                </Nav>\r\n              </Col>\r\n              <Col sm={9}>\r\n                <Tab.Content>\r\n                  <Tab.Pane eventKey=\"listar\">\r\n                    <Loading\r\n                      myRender={() => (\r\n                        <ListItems data={data} showModal={showModal} />\r\n                      )}\r\n                    />\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"nova\">\r\n                    <form>\r\n                      <h3>Nova função ou cargo</h3>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n                          <div className=\"form-group\">\r\n                            <label>Nome da função</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Nome da função\"\r\n                              value={nomeFuncao}\r\n                              onChange={(e) => setNomeFuncao(e.target.value)}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n                          <div className=\"form-group\">\r\n                            <label>Sigla</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Sigla\"\r\n                              value={siglaFuncao}\r\n                              onChange={(e) => setSiglaFuncao(e.target.value)}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n                          <div className=\"form-group\">\r\n                            <label>Descrição</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Descrição\"\r\n                              value={descricaoFuncao}\r\n                              onChange={(e) =>\r\n                                setDescricaoFuncao(e.target.value)\r\n                              }\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-master btn-lg btn-block\"\r\n                        onClick={create}\r\n                      >\r\n                        Criar\r\n                      </button>\r\n                    </form>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"associar\">\r\n                    <form>\r\n                      <h3>Associar função à direcção</h3>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n                          <div className=\"form-group\">\r\n                            <label>Direcção</label>\r\n                            <select\r\n                              className=\"custom-select\"\r\n                              onChange={(e) => {\r\n                                setDepartamento_id(btoa(e.target.value));\r\n                              }}\r\n                            >\r\n                              <option value=\"-1\">Escolhe uma direcção</option>\r\n                              {departamentos.map((value, key) => {\r\n                                return (\r\n                                  <option key={key} value={value.id}>\r\n                                    {value.nome}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\r\n                          <div className=\"form-group\">\r\n                            <label>Função</label>\r\n                            <select\r\n                              className=\"custom-select\"\r\n                              onChange={(e) => changeHire(e.target.value)}\r\n                            >\r\n                              <option value=\"-1\">Escolhe uma função</option>\r\n                              {cargos.map((value, key) => {\r\n                                return (\r\n                                  <option key={key} value={value.id}>\r\n                                    {value.nome}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"btn btn-master btn-lg btn-block\"\r\n                          onClick={associete}\r\n                        >\r\n                          Associar\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </Col>\r\n            </Row>\r\n          </Tab.Container>\r\n        </Tab>\r\n        <Tab eventKey=\"exemplo\" title=\"Exemplo\" className=\"pt-3\">\r\n          <Accordion defaultActiveKey=\"0\">\r\n            <Card>\r\n              <Card.Header>\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                  Listar funções\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>exemplo</Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n            <Card>\r\n              <Card.Header>\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                  Nova função\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"1\">\r\n                <Card.Body>Criação de nova função ou cargo.</Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n            <Card>\r\n              <Card.Header>\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n                  Associar função\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"2\">\r\n                <Card.Body>Associar função à direcção ou à militante</Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Accordion>\r\n        </Tab>\r\n      </Tabs>\r\n\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        size=\"lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"text-dark\">Alerta - SIIM</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-dark\">\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                <div className=\"form-group\">\r\n                  <label>Nome</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Nome da direcção\"\r\n                    value={nomeGeral}\r\n                    onChange={(e) => setNomeGeral(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                <div className=\"form-group\">\r\n                  <label>Sigla</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Sigla\"\r\n                    value={siglaGeral}\r\n                    onChange={(e) => setSiglaGeral(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                <div className=\"form-group\">\r\n                  <label>Descrição</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Descrição\"\r\n                    value={descricaoGeral}\r\n                    onChange={(e) => setDescricaoGeral(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-second\" onClick={handleClose}>\r\n            Cancelar\r\n          </button>\r\n          <button className=\"btn btn-master\" onClick={update}>\r\n            Alterar\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\services\\Api.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\services\\auth.js",["163"],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Settings\\listItems.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Loading\\index.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\utils\\dataFormate.js",[],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\User\\viewer.js",["164","165"],"import React, { useState, useEffect } from 'react';\r\n\r\nexport default function Viewer() {\r\n  return (\r\n    <>\r\n      <h1>Viewer</h1>\r\n      <p>Visualizador</p>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Comite\\viewer.js",["166","167"],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Nucleo\\viewer.js",["168","169"],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Militante\\viewer.js",["170","171"],"C:\\Users\\NOemiA PEReirA\\Source\\ReactJS\\jm-camama\\src\\components\\Agenda\\viewer.js",["172","173"],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":21,"column":6,"nodeType":"180","endLine":21,"endColumn":8,"suggestions":"181"},{"ruleId":"178","severity":1,"message":"182","line":20,"column":6,"nodeType":"180","endLine":20,"endColumn":8,"suggestions":"183"},{"ruleId":"178","severity":1,"message":"184","line":19,"column":6,"nodeType":"180","endLine":19,"endColumn":8,"suggestions":"185"},{"ruleId":"178","severity":1,"message":"186","line":23,"column":6,"nodeType":"180","endLine":23,"endColumn":8,"suggestions":"187"},{"ruleId":"178","severity":1,"message":"188","line":34,"column":6,"nodeType":"180","endLine":34,"endColumn":8,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":221,"column":9,"nodeType":"192","messageId":"193","endLine":221,"endColumn":12},{"ruleId":"178","severity":1,"message":"194","line":22,"column":6,"nodeType":"180","endLine":22,"endColumn":8,"suggestions":"195"},{"ruleId":"178","severity":1,"message":"182","line":13,"column":6,"nodeType":"180","endLine":13,"endColumn":8,"suggestions":"196"},{"ruleId":"178","severity":1,"message":"197","line":16,"column":6,"nodeType":"180","endLine":16,"endColumn":8,"suggestions":"198"},{"ruleId":"190","severity":1,"message":"199","line":35,"column":10,"nodeType":"192","messageId":"193","endLine":35,"endColumn":18},{"ruleId":"190","severity":1,"message":"200","line":4,"column":24,"nodeType":"192","messageId":"193","endLine":4,"endColumn":32},{"ruleId":"190","severity":1,"message":"201","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"202","line":1,"column":27,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"190","severity":1,"message":"201","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"202","line":1,"column":27,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"190","severity":1,"message":"201","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"202","line":1,"column":27,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"190","severity":1,"message":"201","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"202","line":1,"column":27,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"190","severity":1,"message":"201","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"202","line":1,"column":27,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getMilitantes' and 'user_id'. Either include them or remove the dependency array.","ArrayExpression",["205"],"React Hook useEffect has a missing dependency: 'getComites'. Either include it or remove the dependency array.",["206"],"React Hook useEffect has a missing dependency: 'nucleo_id'. Either include it or remove the dependency array.",["207"],"React Hook useEffect has missing dependencies: 'comite_id' and 'getComites'. Either include them or remove the dependency array.",["208"],"React Hook useEffect has a missing dependency: 'militante_id'. Either include it or remove the dependency array.",["209"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'agenda_id'. Either include it or remove the dependency array.",["210"],["211"],"React Hook useEffect has a missing dependency: 'getAgenda'. Either include it or remove the dependency array.",["212"],"'cargo_id' is assigned a value but never used.","'direccao' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"215","fix":"225"},{"desc":"226","fix":"227"},"Update the dependencies array to be: [getMilitantes, user_id]",{"range":"228","text":"229"},"Update the dependencies array to be: [getComites]",{"range":"230","text":"231"},"Update the dependencies array to be: [nucleo_id]",{"range":"232","text":"233"},"Update the dependencies array to be: [comite_id, getComites]",{"range":"234","text":"235"},"Update the dependencies array to be: [militante_id]",{"range":"236","text":"237"},"Update the dependencies array to be: [agenda_id]",{"range":"238","text":"239"},{"range":"240","text":"231"},"Update the dependencies array to be: [getAgenda]",{"range":"241","text":"242"},[795,797],"[getMilitantes, user_id]",[796,798],"[getComites]",[714,716],"[nucleo_id]",[910,912],"[comite_id, getComites]",[1518,1520],"[militante_id]",[871,873],"[agenda_id]",[415,417],[549,551],"[getAgenda]"]